{"version":3,"sources":["atoms.tsx","components/CreateCategory.tsx","components/CreateToDo.tsx","components/ToDo.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["categoryState","atom","key","default","categoriesState","name","toDoState","toDoSelector","selector","get","toDos","category","filter","toDo","CreateCategory","useRecoilState","categories","setCategories","useForm","register","setValue","handleSubmit","useEffect","saved","localStorage","getItem","savedCategories","JSON","parse","setItem","stringify","onSubmit","oldCategories","required","placeholder","CreateToDo","setToDos","selectedToDos","useRecoilValue","nowCategory","savedToDos","console","log","oldToDos","text","id","Date","now","List","styled","li","Remove","button","props","theme","accentColor","ToDo","useSetRecoilState","onClick","event","targetIndex","findIndex","slice","Container","div","Title","h1","SubTitle","h2","CategoryWrapper","CategoryList","ul","Category","textColor","ToDosWrapper","ToDosList","ToDoList","setCategory","currentTarget","map","index","GlobalStyle","createGlobalStyle","bgColor","App","ReactDOM","render","StrictMode","boxColor","chartTheme","document","getElementById"],"mappings":"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","file":"static/js/main.66a56bd9.chunk.js","sourcesContent":["import {atom, selector} from \"recoil\";\r\n\r\nexport interface ICategories {\r\n    name:string    \r\n}\r\n\r\nexport interface IToDo {\r\n    text:string;\r\n    id:number;\r\n    category:string;\r\n}\r\n\r\nexport const categoryState = atom<string>({\r\n    key:\"nowCategory\",\r\n    default: \"TO_DO\"\r\n})\r\n\r\nexport const categoriesState = atom<ICategories[]>({\r\n    key:\"categories\",\r\n    default:[{name:\"TO_DO\"}, {name:\"DOING\"}, {name:\"DONE\"}]\r\n})\r\n\r\nexport const toDoState = atom<IToDo[]>({\r\n    key:\"toDo\",\r\n    default:[]\r\n})\r\n\r\nexport const toDoSelector = selector({\r\n    key: \"toDoSelector\",\r\n    get:({get}) => {\r\n        const toDos = get(toDoState);\r\n        const category = get(categoryState);\r\n        return toDos.filter((toDo) => toDo.category === category)\r\n    }\r\n});","import { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { categoriesState,ICategories } from \"../atoms\";\r\n\r\ninterface IForm {\r\n    category: string;\r\n}\r\n\r\nfunction CreateCategory(){\r\n    const [categories, setCategories] = useRecoilState(categoriesState);\r\n    const { register, setValue, handleSubmit } = useForm<IForm>();\r\n\r\n    const handleValid = ({category}:IForm) => {\r\n        setCategories(oldCategories => [...oldCategories, {name:category}])\r\n        setValue(\"category\", \"\");\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const saved = localStorage.getItem(\"categories\");\r\n        if(saved !== null){\r\n            const savedCategories:ICategories[] = JSON.parse(saved);\r\n            setCategories(savedCategories);\r\n            \r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        localStorage.setItem(\"categories\", JSON.stringify(categories));\r\n    }, [categories]);\r\n    return(\r\n        <form onSubmit={handleSubmit(handleValid)}>\r\n            <input {...register(\"category\", {\r\n                required:\"Please write new Category\"})} \r\n                placeholder=\"Add a category\" />\r\n            <button>+</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateCategory;","import { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { categoryState, toDoState, IToDo, toDoSelector } from \"../atoms\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IForm {\r\n    toDo: string;\r\n}\r\n\r\nfunction CreateToDo(){\r\n    const [toDos ,setToDos] = useRecoilState(toDoState);\r\n    const selectedToDos = useRecoilValue(toDoSelector);\r\n    const nowCategory = useRecoilValue(categoryState);\r\n    const { register, setValue, handleSubmit } = useForm<IForm>();\r\n    const handleValid = ({toDo}: IForm) => {\r\n        setToDos(oldToDos => [{text:toDo, id:Date.now(), category:nowCategory}, ...oldToDos]);\r\n        setValue(\"toDo\", \"\");\r\n    }\r\n    useEffect(() => {\r\n        const saved = localStorage.getItem(nowCategory);\r\n        if(saved !== null){\r\n            const savedToDos:IToDo[] = JSON.parse(saved);\r\n            setToDos(savedToDos);\r\n        }\r\n        console.log(selectedToDos);\r\n    }, [nowCategory]);\r\n    useEffect(() => {\r\n        localStorage.setItem(nowCategory, JSON.stringify(selectedToDos));\r\n    }, [toDos]);\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit(handleValid)}>\r\n            <input {...register(\"toDo\", {\r\n                required: \"Please write a To Do\"})} \r\n                placeholder=\"Write a to do\"\r\n            />\r\n            <button>+</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default CreateToDo;","import React from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { IToDo, toDoState } from \"../atoms\";\r\nimport styled from \"styled-components\";\r\n\r\nconst List = styled.li`\r\n    margin-bottom: 5px;\r\n    display:flex;\r\n    justify-content:space-between;\r\n`;\r\n\r\nconst Remove = styled.button`\r\n    color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nfunction ToDo({text, category, id}:IToDo){\r\n    const setToDos = useSetRecoilState(toDoState);\r\n    // const onClick = (event:React.MouseEvent<HTMLButtonElement>) => {\r\n    //     const {currentTarget:{name}} = event;\r\n    //     setToDos((oldToDos) => {\r\n    //         const targetIndex = oldToDos.findIndex(toDo => toDo.id === id);\r\n    //         const newToDo = {text, id, category:name as any}\r\n    //         return [\r\n    //             ...oldToDos.slice(0, targetIndex),\r\n    //         newToDo,\r\n    //     ...oldToDos.slice(targetIndex + 1)];\r\n    //     })\r\n    // }\r\n    const onDelete = (event:React.MouseEvent<HTMLButtonElement>) => {\r\n        setToDos((oldToDos) => {\r\n            const targetIndex = oldToDos.findIndex(toDo => toDo.id === id);\r\n            return [\r\n                ...oldToDos.slice(0, targetIndex),\r\n                ...oldToDos.slice(targetIndex + 1)\r\n            ];\r\n        })\r\n    }\r\n    return (\r\n    <List>\r\n        <span>{text}</span>\r\n        {/* {category !== \"DOING\" && <button name={\"DOING\"} onClick={onClick}>Doing</button>}\r\n        {category !== \"TO_DO\" && <button name={\"TO_DO\"} onClick={onClick}>To Do</button>}\r\n        {category !== \"DONE\" && <button name={\"DONE\"} onClick={onClick}>Done</button>} */}\r\n        <Remove onClick={onDelete}>X</Remove>\r\n    </List>\r\n    );\r\n}\r\n\r\nexport default ToDo;","import  {useRecoilState, useRecoilValue} from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { categoryState, toDoSelector, categoriesState } from \"../atoms\";\r\nimport CreateCategory from \"./CreateCategory\";\r\nimport CreateToDo from \"./CreateToDo\";\r\nimport ToDo from \"./ToDo\";\r\n\r\nconst Container = styled.div`\r\n    max-width:480px;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    margin: 25px auto;\r\n    `;\r\n\r\nconst Title = styled.h1`\r\n    font-size: 30px;\r\n    border-bottom: ${(props) => props.theme.accentColor} solid 2px;\r\n    padding : 20px 10px;\r\n`;\r\n\r\nconst SubTitle = styled.h2`\r\n    margin-bottom:20px;\r\n`;\r\n\r\nconst CategoryWrapper = styled.div`\r\n    padding: 20px 10px;\r\n    padding-bottom: 40px;\r\n    border-bottom: ${(props) => props.theme.accentColor} solid 2px;\r\n`;\r\n\r\nconst CategoryList = styled.ul`\r\n    max-width:400px;\r\n    margin : 0 auto;\r\n`;\r\n\r\nconst Category = styled.li`\r\n    margin-bottom: 5px;\r\n    button {\r\n        color:${props => props.theme.textColor};\r\n    }\r\n    button:hover {\r\n        color: ${(props) => props.theme.accentColor};\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst ToDosWrapper = styled.div`\r\n    padding:20px 10px;\r\n    \r\n`;\r\n\r\nconst ToDosList = styled.div`\r\n    max-width:400px;\r\n    margin : 0 auto;\r\n    padding-left:5px;\r\n`;\r\n\r\nfunction ToDoList() {\r\n    const toDos = useRecoilValue(toDoSelector);\r\n    const [category, setCategory] = useRecoilState(categoryState);\r\n    const categories = useRecoilValue(categoriesState);\r\n    const onClick = (event:React.MouseEvent<HTMLButtonElement>) => {\r\n        const {currentTarget:{name}} = event;\r\n        setCategory(name as any);\r\n    }\r\n    return (\r\n        <Container>\r\n            <Title>To Dos</Title>\r\n            <CategoryWrapper>\r\n                <SubTitle>Category</SubTitle>\r\n                <CreateCategory />\r\n                <CategoryList>\r\n                    {categories.map((category, index) => <Category><button name={category.name} onClick={onClick} >{category.name}</button ></Category>)}\r\n                </CategoryList>\r\n            </CategoryWrapper>\r\n            <ToDosWrapper>\r\n                <SubTitle>{category}</SubTitle>\r\n                <CreateToDo />\r\n                <ToDosList>\r\n                    {toDos?.map(toDo =><ToDo key={toDo.id} {...toDo} />)}\r\n                </ToDosList>\r\n            </ToDosWrapper>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nexport default ToDoList;","import {createGlobalStyle} from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nli, ul {\n    list-style: none;\n}\ninput {\n    outline:none;\n    background:${(props) => props.theme.bgColor};\n    border:none;\n    flex:1;\n    color:#A19882;\n    font-weight:700;\n    /* border-bottom:${(props) => props.theme.accentColor} solid 2px; */\n    &:focus {\n    background:${(props) => props.theme.accentColor};\n    color:#A19882;\n    }\n}\nform {\n    border:${(props) => props.theme.accentColor} solid 2px;\n    max-width:400px;\n    margin : 0 auto;\n    margin-bottom: 20px;\n    background:${(props) => props.theme.accentColor};\n    display:flex;\n    justify-content: space-between;\n    button {\n        color:${(props) => props.theme.textColor};\n        font-size:20px;\n        background:${(props) => props.theme.accentColor};\n        &:hover {\n            cursor:pointer;\n        }\n    }\n\n}\ntable {\n    border-collapse: collapse;\n\tborder-spacing: 0;\n}\n* {\n    box-sizing:border-box\n}\nbody {\n  line-height: 1;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${props => props.theme.bgColor};\n  color:${props => props.theme.textColor};\n}\nbutton {\n  background-color:${props => props.theme.bgColor};\n  border:none;\n}\n`;\n\nfunction App() {\n    return (\n        <>\n            <GlobalStyle />\n            <ToDoList />\n        </>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot } from 'recoil';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport {darkTheme} from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n    bgColor: \"#353b48\",\r\n    textColor: \"#f5f6fa\",\r\n    accentColor: \"#f6e58d\",\r\n    boxColor:\"#171b20\",\r\n    chartTheme:\"dark\"\r\n};"],"sourceRoot":""}